// Team name: KCK.c
// Colin Burke, 12340831
// Katie Aragane, 12371116
// Kelly Redmond, 12446372

import java.util.Scanner;


public class HumanPlayer
{
	public static int[][] makeMove(int a, int array[][]) // takes in move number a, and moveHolder array, and returns the array holding the pip and distance
	{
		int startPip = 0;
		int distance = 0;
		
		Scanner scan = new Scanner(System.in);
		
		System.out.print("Please enter a move in the form: pip-distance: ");
				
		String keyboardInput = scan.next();	// takes in a string from the keyboard	
		
		if(keyboardInput.contains("bar"))	// check if the bar was entered
		{
			startPip = 25;	// set startPip to 25 
			keyboardInput = keyboardInput.replaceAll("bar", "25");	// replace the 'off' with 25
		}
		
		if(keyboardInput.contains("off"))	// check if the off was entered
		{
			startPip = 0;	// set startPip to 0
			keyboardInput = keyboardInput.replaceAll("off", "0");	// replace the 'off' with 0
		}
		
		else if((keyboardInput.contains("bar"))||(keyboardInput.contains("off")) == false)	// if the input doesn't contain bar or 0
		{
			String[] enteredMove = (keyboardInput).split("-");	// takes in as string and splits up according to the '-' symbol
		
			startPip = Integer.parseInt(enteredMove[0]);	// first number is stored in startPip
			distance = Integer.parseInt(enteredMove[1]);	// second number is stored in distance	
		}
		
		
		if(HumanPlayer.checkSyntax(startPip, distance) == false)	// check the syntax
		{
			HumanPlayer.makeMove(a, array);	// call the move method again
		}
		
		else
		{
			array[a-1][0] = startPip;	// storing the pip in the array
			array[a-1][1] = distance;	// storing the distance in the array
			System.out.println("The move you entered was: " + startPip + "-" + distance +"\n");	// printing just to show the user
		}
	
		
		return array;	// returns the array containing startPip and distance
		
	}


	public static boolean checkSyntax(int start, int dist)	// takes in the entered move numbers and makes sure they're valid
	{
		boolean valid = true; 
		
		if((start > 25) || (start < 0) || (dist > 6) || (dist < 0))	// if the input stuff isn't between these parameters
		{
			System.out.print("That is not a valid move. ");
			valid = false;
		}
		
		return valid;
	}

	public static void applyToBoard(Play move, int array[][])	// applies the move to the board
	{
		
		move.setPlay(array[0][0], array[0][1], array[1][0], array[1][1]);	// takes in four moves
		
	}
	
										
}

